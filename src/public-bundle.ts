
// This file is auto-generated
export const publicAssets: Record<string, string> = {
  "index.html": "PCFET0NUWVBFIGh0bWw+DQo8aHRtbCBsYW5nPSJlbiI+DQoNCjxoZWFkPg0KICAgIDxtZXRhIGNoYXJzZXQ9IlVURi04Ij4NCiAgICA8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTEuMCI+DQogICAgPHRpdGxlPlRpZGFMdW5hIEluc3RhbGxlcjwvdGl0bGU+DQogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJzdHlsZXMuY3NzIj4NCiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzMj9mYW1pbHk9T3V0Zml0OndnaHRAMzAwOzQwMDs1MDA7NjAwOzcwMCZkaXNwbGF5PXN3YXAiPg0KPC9oZWFkPg0KDQo8Ym9keT4NCiAgICA8ZGl2IGNsYXNzPSJiYWNrZ3JvdW5kIj4NCiAgICAgICAgPGRpdiBjbGFzcz0iZ3JhZGllbnQtc3BoZXJlIj48L2Rpdj4NCiAgICAgICAgPGRpdiBjbGFzcz0iZ3JhZGllbnQtc3BoZXJlIHNlY29uZGFyeSI+PC9kaXY+DQogICAgPC9kaXY+DQoNCiAgICA8ZGl2IGNsYXNzPSJjb250YWluZXIiPg0KICAgICAgICA8aGVhZGVyPg0KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9nby1jb250YWluZXIiPg0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImxvZ28iPg0KICAgICAgICAgICAgICAgICAgICA8c3ZnIHZpZXdCb3g9IjAgMCAyNCAyNCIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxwYXRoDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgZD0iTTMgMThDMyAxOCA0LjUgMTYgNiAxNkM3LjUgMTYgOSAxOCAxMC41IDE4QzEyIDE4IDEzLjUgMTYgMTUgMTZDMTYuNSAxNiAxOCAxOCAxOS41IDE4QzIxIDE4IDIyLjUgMTYgMjIuNSAxNiINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHJva2U9ImN1cnJlbnRDb2xvciIgc3Ryb2tlLXdpZHRoPSIyIiBzdHJva2UtbGluZWNhcD0icm91bmQiIHN0cm9rZS1saW5lam9pbj0icm91bmQiIC8+DQogICAgICAgICAgICAgICAgICAgICAgICA8cGF0aA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGQ9Ik0zIDEyQzMgMTIgNC41IDEwIDYgMTBDNy41IDEwIDkgMTIgMTAuNSAxMkMxMiAxMiAxMy41IDEwIDE1IDEwQzE2LjUgMTAgMTggMTIgMTkuNSAxMkMyMSAxMiAyMi41IDEwIDIyLjUgMTAiDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgc3Ryb2tlPSJjdXJyZW50Q29sb3IiIHN0cm9rZS13aWR0aD0iMiIgc3Ryb2tlLWxpbmVjYXA9InJvdW5kIiBzdHJva2UtbGluZWpvaW49InJvdW5kIiAvPg0KICAgICAgICAgICAgICAgICAgICA8L3N2Zz4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICA8aDE+VGlkYUx1bmE8L2gxPg0KICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICA8cCBjbGFzcz0ic3VidGl0bGUiPkluc3RhbGxlcjwvcD4NCiAgICAgICAgPC9oZWFkZXI+DQoNCiAgICAgICAgPG1haW4+DQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdGF0dXMtY29udGFpbmVyIj4NCiAgICAgICAgICAgICAgICA8ZGl2IGlkPSJzdGF0dXMiIGNsYXNzPSJzdGF0dXMiPlNlbGVjdCBhIHJlbGVhc2UgY2hhbm5lbCB0byBiZWdpbjwvZGl2Pg0KICAgICAgICAgICAgICAgIDxkaXYgaWQ9ImxvYWRlciIgY2xhc3M9ImxvYWRlciBoaWRkZW4iPg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzcGlubmVyIj48L2Rpdj4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWxlYXNlcy1jb250YWluZXIiPg0KICAgICAgICAgICAgICAgIDxoMj5SZWxlYXNlIENoYW5uZWxzPC9oMj4NCiAgICAgICAgICAgICAgICA8ZGl2IGlkPSJyZWxlYXNlcyIgY2xhc3M9InJlbGVhc2VzIj4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9hZGluZy1wbGFjZWhvbGRlciI+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwbGFjZWhvbGRlci1jYXJkIj48L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InBsYWNlaG9sZGVyLWNhcmQiPjwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icGxhY2Vob2xkZXItY2FyZCI+PC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFjdGlvbnMiPg0KICAgICAgICAgICAgICAgIDxidXR0b24gaWQ9Imluc3RhbGwtYnRuIiBjbGFzcz0iYnRuIHByaW1hcnkiIGRpc2FibGVkPg0KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYnRuLWljb24iPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIxOCIgaGVpZ2h0PSIxOCIgdmlld0JveD0iMCAwIDI0IDI0IiBmaWxsPSJub25lIg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0cm9rZT0iY3VycmVudENvbG9yIiBzdHJva2Utd2lkdGg9IjIiIHN0cm9rZS1saW5lY2FwPSJyb3VuZCIgc3Ryb2tlLWxpbmVqb2luPSJyb3VuZCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGggZD0iTTIxIDE1djRhMiAyIDAgMCAxLTIgMkg1YTIgMiAwIDAgMS0yLTJ2LTQiPjwvcGF0aD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cG9seWxpbmUgcG9pbnRzPSI3IDEwIDEyIDE1IDE3IDEwIj48L3BvbHlsaW5lPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaW5lIHgxPSIxMiIgeTE9IjE1IiB4Mj0iMTIiIHkyPSIzIj48L2xpbmU+DQogICAgICAgICAgICAgICAgICAgICAgICA8L3N2Zz4NCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICBJbnN0YWxsIFNlbGVjdGVkIFZlcnNpb24NCiAgICAgICAgICAgICAgICA8L2J1dHRvbj4NCiAgICAgICAgICAgICAgICA8YnV0dG9uIGlkPSJ1bmluc3RhbGwtYnRuIiBjbGFzcz0iYnRuIHNlY29uZGFyeSI+DQogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJidG4taWNvbiI+DQogICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgd2lkdGg9IjE4IiBoZWlnaHQ9IjE4IiB2aWV3Qm94PSIwIDAgMjQgMjQiIGZpbGw9Im5vbmUiDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgc3Ryb2tlPSJjdXJyZW50Q29sb3IiIHN0cm9rZS13aWR0aD0iMiIgc3Ryb2tlLWxpbmVjYXA9InJvdW5kIiBzdHJva2UtbGluZWpvaW49InJvdW5kIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cG9seWxpbmUgcG9pbnRzPSIzIDYgNSA2IDIxIDYiPjwvcG9seWxpbmU+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGggZD0iTTE5IDZ2MTRhMiAyIDAgMCAxLTIgMkg3YTIgMiAwIDAgMS0yLTJWNm0zIDBWNGEyIDIgMCAwIDEgMi0yaDRhMiAyIDAgMCAxIDIgMnYyIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3BhdGg+DQogICAgICAgICAgICAgICAgICAgICAgICA8L3N2Zz4NCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICBVbmluc3RhbGwgVGlkYUx1bmENCiAgICAgICAgICAgICAgICA8L2J1dHRvbj4NCiAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICA8L21haW4+DQoNCiAgICAgICAgPGZvb3Rlcj4NCiAgICAgICAgICAgIDxwPlRpZGFMdW5hIEluc3RhbGxlciBieSBqeG54c2RldjwvcD48YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vanhueHNkZXYvVGlkYUx1bmEtSW5zdGFsbGVyIj5HaXRodWI8L2E+DQogICAgICAgIDwvZm9vdGVyPg0KICAgIDwvZGl2Pg0KDQogICAgPGRpdiBpZD0idG9hc3QiIGNsYXNzPSJ0b2FzdCBoaWRkZW4iPg0KICAgICAgICA8ZGl2IGNsYXNzPSJ0b2FzdC1jb250ZW50Ij4NCiAgICAgICAgICAgIDxzcGFuIGlkPSJ0b2FzdC1tZXNzYWdlIj48L3NwYW4+DQogICAgICAgIDwvZGl2Pg0KICAgIDwvZGl2Pg0KDQogICAgPHNjcmlwdCBzcmM9InNjcmlwdC5qcyI+PC9zY3JpcHQ+DQo8L2JvZHk+DQoNCjwvaHRtbD4=",
  "script.js": "",
  "styles.css": ""
};
